plugins {
    id 'eclipse'
    id 'maven-publish'
    id 'net.minecraftforge.gradle' version '6.0.+'
}

version = '0.1.2'
group = 'com.invlab.sluicegate'
archivesBaseName = 'sluice_gate'

java.toolchain.languageVersion = JavaLanguageVersion.of(17)

minecraft {
    mappings channel: 'official', version: '1.20.1'
    accessTransformer = file('src/main/resources/META-INF/accesstransformer.cfg')
    
    runs {
        client {
            workingDirectory project.file('run')
            property 'forge.logging.console.level', 'debug'
            mods { sluice_gate { source sourceSets.main } }
        }
        server {
            workingDirectory project.file('run')
            property 'forge.logging.console.level', 'debug'
            mods { sluice_gate { source sourceSets.main } }
        }
        data {
            workingDirectory project.file('run')
            args '--mod', 'sluice_gate', '--all', '--output', file('src/generated/resources/')
            mods { sluice_gate { source sourceSets.main } }
        }
    }
}

processResources {
    // 定义模组元数据属性
    def props = [
        "mod_id": "sluice_gate",
        "mod_name": "Sluice Gate",
        "mod_version": project.version,
        "mod_authors": "InvLab, Deepseek",
        "mod_description": "多方块动态闸门系统（Dynamic multi-block sluice gate system）",
        "mod_license": "All Rights Reserved",
        "minecraft_version_range": "[1.20.1]",
        "forge_version_range": "[47.2.0,)",
        "loader_version_range": "[47,)"
    ]
    
    inputs.properties(props) // 将这些属性提供给资源处理
    
    filesMatching(['META-INF/mods.toml', 'pack.mcmeta']) {
        expand props // 扩展模板中的属性
    }
}

dependencies {
    minecraft 'net.minecraftforge:forge:1.20.1-47.2.0'
}

tasks.withType(JavaCompile).configureEach {
    options.encoding = 'UTF-8'
}
jar {
    manifest {
        attributes([
            "Specification-Title": archivesBaseName,
            "Specification-Version": "1",
            "Implementation-Title": project.name,
            "Implementation-Version": project.jar.archiveVersion,
            "Implementation-Timestamp": new Date().format("yyyy-MM-dd'T'HH:mm:ssZ")
        ])
    }
    finalizedBy('reobfJar')
}
